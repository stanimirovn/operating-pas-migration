---
title: What Happens During TAS for VMs Upgrades
owner: Ops Manager
---

This topic explains what happens to <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>) components and apps during a <%= vars.app_runtime_abbr %> upgrade.


## <a id="bosh-drains"></a> BOSH Drains Diego Cell VMs

During a <%= vars.app_runtime_abbr %> upgrade, BOSH drains all Diego Cell VMs that host app instances. BOSH manages this process by upgrading a batch of cells one at a time.

When BOSH triggers an upgrade, each upgrading Diego Cell enters evacuation mode. In evacuation mode, BOSH stops Diego Cells and then schedules replacements for its app instances.

For more information, see [Specific Guidance for Diego Cells](configuring.html#diego-cells) in _Configuring <%= vars.app_runtime_abbr %> for Upgrades_.


## <a id="cf-push"></a> cf push Can Become Unavailable

`cf push` is mostly available for the duration of a <%= vars.app_runtime_abbr %> upgrade. However, `cf push` can become unavailable when a single VM is in use or during BOSH Backup and Restore (BBR).

For more information, see [cf push Availability During <%= vars.app_runtime_abbr %> Upgrades](cfpush-availability-during-upgrade.html).


## <a id="upgrade-limitations"></a> <%= vars.app_runtime_abbr %> Components Upgrade

This section describes the order in which <%= vars.ops_manager_full %> upgrades components and runs tasks during a full platform upgrade. It also explains how the scale of different <%= vars.app_runtime_abbr %> components affects uptime during upgrades, and which components are scalable.

When performing an upgrade, <%= vars.ops_manager %> first upgrades individual components, and then runs one-time tasks.

1. [Components](#components) describes how <%= vars.ops_manager %> upgrades <%= vars.app_runtime_abbr %> components and explains how individual component upgrades affect broader <%= vars.app_runtime_abbr %> capabilities.

1. [One-Time Tasks](#tasks) lists the tasks that <%= vars.ops_manager %> runs after it upgrades the <%= vars.app_runtime_abbr %> components.

### <a id= "components"></a> Components

<%= vars.ops_manager %> upgrades <%= vars.app_runtime_abbr %> components in a fixed order that honors component dependencies and minimizes downtime and other system limitations during the upgrade process.

The type and duration of downtime and other limitations that you can expect during a <%= vars.app_runtime_abbr %> upgrade reflect:

* Component instance scaling. For more information, see [How Single-Component Scaling Affects Upgrades](#single-components) below.

* Component upgrade order. For more information, see [Component Upgrade Order and Behavior](#order-behavior) below.

#### <a id= "single-components"></a> How Single-Component Scaling Affects Upgrades

In <%= vars.ops_manager %>, the **Resource Config** pane of the <%= vars.app_runtime_abbr %> tile shows the components that the BOSH Director installs:

* **Scalable** component fields let you select the instance count from a range of settings or enter a custom value.

* **Unscalable** component fields allow a maximum of one instance.

When a component is scaled at a single instance, it can experience downtime and other limitations while the single VM restarts. This behavior might be acceptable for a test environment. To avoid downtime in a production environment, you should scale any scalable components, such as HAProxy, Router, and Diego Cells, to more than one instance.

For more information about how the scale of each component affects upgrade behavior, see [Component Upgrade Order and Behavior](#order-behavior) below.

<p class="note"><strong>Note:</strong> A full <%= vars.ops_manager %> upgrade may take close to two hours. You have limited ability to deploy an app during this time.</p>

#### <a id= "order-behavior"></a> Component Upgrade Order and Behavior

The table below lists components in the order that <%= vars.ops_manager %> upgrades each. It also lists which components are scalable and explains how component downtime affects <%= vars.app_runtime_abbr %> app and control availability. The table includes these columns:

* **Scalable:** Indicates whether the component is scalable above a single instance.
    <p class="note"><strong>Note:</strong> For components marked with a checkmark in this column, <%= vars.company_name %> recommends that you change the preconfigured instance value of <code>1</code> to a value that best supports your production environment. For more information about scaling a deployment, see <a href="../concepts/high-availability.html">High Availability in <%= vars.app_runtime_abbr %></a>.</p>

* **Extended Downtime:** Indicates that if there is only one instance of the component, that component is unavailable for up to five minutes during an upgrade.

* **Downtime Affects...:** Indicates the plane of the <%= vars.app_runtime_abbr %> platform that component downtime affects, if the component is scaled at single instance:
  * **Apps**: Downtime can affect app availability.
  * **Platform**: Apps remain available during component downtime, but you cannot push, stage, or restart apps, or run other Cloud Foundry command-line interface (cf CLI) commands.

* **Other Limitations and Information:** Provides:
  * Component availability, behavior, and usage during an upgrade
  * Guidance on disabling the component before an upgrade

<table border="1" class="nice" >
<tr>
  <th rowspan=2><strong>Component</strong></th>
  <th rowspan=2><strong>Scalable</strong></th>
  <th rowspan=2><strong>Extended Downtime</strong></th>
  <th colspan=2><strong>Downtime Affects...</strong></th>
  <th rowspan=2><strong>Other Limitations and Information</strong></th>
</tr>
<tr>
  <th><strong>Apps</strong></th>
  <th><strong>Platform</strong></th>
</tr>
<tr>
  <td>NATS</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td></td>
  <td></td>
  <td></td>
</tr>
<tr>
  <td>File Storage</td>
  <td></td>
  <td>&#10003;</td>
  <td></td>
  <td>&#10003;</td>
  <td></td>
</tr>
<tr>
  <td>MySQL Proxy</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td></td>
  <td>&#10003;</td>
  <td>The MySQL Proxy is responsible for managing failover of the MySQL Servers. If the Proxy becomes unavailable, then access to the MySQL Server could be broken.</td>
</tr>
<tr>
  <td>MySQL Server</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td></td>
  <td>&#10003;</td>
  <td>The MySQL Server is responsible for persisting internal databases for the platform. If the MySQL Server becomes unavailable, then platform services that rely upon a database, such as Cloud Controller and UAA, also become unavailable.</td>
</tr>
<tr>
  <td>Backup Restore Node</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
</tr>
<tr>
  <td>Diego BBS</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td></td>
  <td>&#10003;</td>
  <td></td>
</tr>
<tr>
  <td>UAA</td>
  <td>&#10003;</td>
  <td></td>
  <td></td>
  <td>&#10003;</td>
  <td>If a user has an active authorization token prior to performing an upgrade, they can still log in using either a UI or the CLI.</td>
</tr>
<tr>
  <td>Cloud Controller</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td></td>
  <td>&#10003;</td>
  <td></td>
</tr>
<tr>
  <td>HAProxy</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td></td>
  <td>HAProxy is used to load-balance incoming requests to the Router. If HAProxy is unavailable, you may lose the ability to make requests to apps unless there is another routing path from your load balancer to the Gorouter.</td>
</tr>
<tr>
  <td>Gorouter</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td></td>
  <td>The Gorouter is responsible for routing requests to their app containers. If the Gorouter is not available, then apps cannot receive requests.</td>
</tr>
<tr>
  <td>MySQL Monitor</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
</tr>
<tr>
  <td>Clock Global</td>
  <td>&#10003;</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
</tr>
<tr>
  <td>Cloud Controller Worker</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td></td>
  <td></td>
  <td></td>
</tr>
<tr>
  <td>Diego Brain</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td></td>
  <td>&#10003;</td>
  <td></td>
</tr>
<tr>
  <td>Diego Cell</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td>If you only have one Diego Cell, upgrading causes downtime for all apps that run on it. These include apps pushed with <code>cf push</code> and apps automatically installed by <%= vars.app_runtime_abbr %>, such as Apps Manager and the App Usage Service.</td>
</tr>
<tr>
  <td>Loggregator Trafficcontroller</td>
  <td>&#10003;</td>
  <td></td>
  <td></td>
  <td></td>
  <td>Operators experience 2-5 minute gaps in logging.</td>
</tr>
<tr>
  <td>Doppler Server</td>
  <td>&#10003;</td>
  <td></td>
  <td></td>
  <td></td>
  <td>Operators experience 2-5 minute gaps in logging.</td>
</tr>
<tr>
  <td>TCP Router (if enabled)</td>
  <td>&#10003;</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
</tr>
<tr>
  <td>CredHub</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td>App downtime for apps that use secure credentials. Platform downtime for cf CLI commands such as <code>bind-service</code> and <code>unbind-service</code> applied to services configured with CredHub.</td>
</tr>
<tr>
  <td>Istio Control</td>
  <td></td>
  <td>&#10003;</td>
  <td></td>
  <td>&#10003;</td>
  <td></td>
</tr>
<tr>
  <td>Istio Router</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td></td>
  <td>Downtime for this component only affects routes on mesh domains.</td>
</tr>
<tr>
  <td>Route Syncer</td>
  <td>&#10003;</td>
  <td>&#10003;</td>
  <td></td>
  <td>&#10003;</td>
  <td>Downtime for this component only affects routes on mesh domains.</td>
</tr>
</table>

### <a id= "tasks"></a> One-Time Tasks

After <%= vars.ops_manager %> upgrades components, it performs system checks and launches UI apps and other <%= vars.app_runtime_abbr %> components as Cloud Foundry apps. These tasks run in this order:

<table>
<tr>
  <td>1</td>
  <td>Apps Manager Errand - Push Apps Manager</td>
</tr>
<tr>
  <td>2</td>
  <td>Smoke Test Errand - Run smoke tests</td>
</tr>
<tr>
  <td>3</td>
  <td>Usage Service Errand - Push Usage Service app</td>
</tr>
<tr>
  <td>4</td>
  <td>Notifications Errand - Push Notifications app</td>
</tr>
<tr>
  <td>5</td>
  <td>Notifications UI Errand - Push Notifications UI</td>
</tr>
<tr>
  <td>6</td>
  <td>App Autoscaler Errand - Push App Autoscaler</td>
</tr>
<tr>
  <td>7</td>
  <td>App Autoscaler Smoke Test Errand - Run smoke tests against App Autoscaler</td>
</tr>
<tr>
  <td>8</td>
  <td>Register Autoscaling Service Broker</td>
</tr>
<tr>
  <td>9</td>
  <td>Destroy Autoscaling Service Broker</td>
</tr>
<tr>
  <td>10</td>
  <td>Bootstrap Errand - Recover MySQL cluster</td>
</tr>
<tr>
  <td>11</td>
  <td>MySQL Rejoin Unsafe Errand</td>
</tr>
</table>
