---
title: Securing System and App Endpoints
---

This topic describes how to create a public-facing website and an intranet microservice in the same app.


## <a id='overview'></a> Overview

The configuration described in this topic may be ideal for those in financial or health sectors who need extra security and convenience managing internal and external services. If the configuration is successful, developers can only use the Cloud Foundry Command Line Interface (cf CLI) command `cf push` from approved network paths. For more information about `cf push`, see the [push](http://cli.cloudfoundry.org/en-US/cf/push.html) section of the cf CLI documentation.


## <a id="prerequisites"></a> Prerequisites

Before beginning your configuration, you must register three domains through your trusted DNS provider:

* A **system domain** for <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>) and its accompanying tile services

* An **apps domain** for your intranet microservice

* An additional domain for the public-facing portions of your app

<p class="note"><strong>Note:</strong> <%= vars.company_name %> recommends that you use the same domain name but different subdomain names for your system and app domains. Doing so allows you to use a single wildcard certificate for the domain while preventing apps from creating routes that overlap with system routes.</p>


## <a id="system-domain"></a> Step 1: Configure System and Apps Domains

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard.

1. Click the <%= vars.app_runtime_abbr %> tile.

1. Select **Domains**.

1. Enter the **System domain** and **Apps domain** defined in [Prerequisites](#prerequisites).

     ![The page header says 'Domains'. Below this header is the text 'For help configuring these fields, see Configure Domains in Configuring TAS for VMs in the VMware Tanzu documentation,' with 'Configure Domain' in blue letters to denote a clickable link. Below this text are two fields labeled 'System domain' and 'Apps domain', with red asterisks to denote that they are required fields. The 'System domain' field contains the ghost text 'system.example.com'. The 'Apps domain' field contains the ghost text 'apps.example.com'. At the bottom of the image is a rectangular blue button labeled 'Save'.](domains.png)

1. Navigate to your DNS provider to create A records that point from your apps domains to the public IP address of your load balancer.

1. Click **Save**.


## <a id="load-balancer"></a> Step 2: Secure Apps Domain with HAProxy

<p class="warning note"><strong>Warning:</strong> This method is easy to implement but may not be the best option for your security needs. Contact Support if you seek a custom solution to building secure, internal services.</p>

<p class="note"><strong>Note:</strong> <%= vars.company_name %> supports HAProxy by default. However, you may configure an internal domain using any load balancer you choose that supports host header filtering.</p>

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard.

1. Click the <%= vars.app_runtime_abbr %> tile.

1. Select **Networking**.

1. Enter **HAProxy protected domains**. The domain you enter should be the same domain as the **Apps domain** defined in [Prerequisites](#prerequisites).

1. Enter **HAProxy trusted CIDRs**, separated by spaces. This specifies CIDRs allowed to make requests to the domains listed in the **HAProxy protected domains** field. For example, entering `10.0.1.0/24` would allow any requests originating at a host IP in that range to reach apps or services hosted on the **HAProxy protected domains** list.

1. (Optional) <%# Find this partial in GitHub at `pivotal-cf/docs-partials` %><%= partial "/pcf/core/#{vars.current_major_version.sub('.', '-')}/haproxy_hsts_config" %>

1. (Optional) Configure an additional HAProxy for BOSH to secure your public-facing domain with credentials. For more information, see [proxy-boshrelease](https://github.com/cloudfoundry-incubator/haproxy-boshrelease) on GitHub.


## <a id="authentication"></a> Step 3: (Optional) Enable an Authentication Service

For added security, you may want to install an authentication service to your private domain like Single Sign-on (SSO) for VMware Tanzu. For more information about SSO for VMware Tanzu, see [Single Sign-On Overview](https://docs.pivotal.io/p-identity/index.html).
