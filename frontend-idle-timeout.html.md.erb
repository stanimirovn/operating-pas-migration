---
title: Configuring Front End Idle Timeout for Gorouter and HAProxy
owner: Releng, CF for VMs Networking
---

This topic describes how to configure the **Front end idle timeout for the Gorouter and HAProxy** field in the  **Networking** pane of the <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>) tile.

You can optionally use the **Front end idle timeout for the Gorouter and HAProxy** field to help prevent connections from your load balancer to the Gorouter or HAProxy from being closed prematurely. The value you enter sets the duration, in seconds, that the Gorouter or HAProxy maintains an idle open connection from a load balancer that supports keep-alive.

In general, set the value higher than your load balancer's back end idle timeout to avoid the race condition where the load balancer sends a request before it discovers that the Gorouter or HAProxy has closed the connection.

For specific guidance and exceptions to this rule, see the table below:

| IaaS | Guidance |
| ---- | -------- |
| AWS | AWS ELB has a default timeout of 60 seconds, so <%= vars.company_name %> recommends a value greater than `60`. |
| Azure | By default, Azure load balancer times out at 240 seconds without sending a TCP RST to clients, so as an exception, <%= vars.company_name %> recommends a value lower than `240` to force the load balancer to send the TCP RST. |
| GCP | GCP has a default timeout of 600 seconds. For GCP HTTP load balancers, <%= vars.company_name %> recommends a value greater than `600`. For GCP TCP load balancers, <%= vars.company_name %> recommends a value less than `600` to force the load balancer to send a TCP RST. |
| Other | Set the timeout value to be greater than that of the load balancer's back end idle timeout. |
