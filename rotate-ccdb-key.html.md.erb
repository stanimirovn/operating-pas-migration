---
title: Rotating the Cloud Controller Database Encryption Key
owner: CAPI
---

This topic describes how to rotate the Cloud Controller database (CCDB) encryption key. 


## <a id="overview"></a> Overview

The Cloud Controller is the primary API of <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>).
It has its own database, the CCDB, in which it stores information about objects
in <%= vars.app_runtime_abbr %> such as apps.
The CCDB encryption key is used to encrypt sensitive data at rest in the CCDB
such as app environment variables.

The CCDB encryption key is automatically generated when you first deploy <%= vars.app_runtime_abbr %>.
You can rotate the CCDB encryption key as described in this topic.
For example, you might want to perform this procedure if your existing key is leaked.


##  <a id="rotate"></a> Rotate the CCDB Encryption Key

<p class="note warning"><strong>Warning:</strong> Do not modify the <strong>Cloud Controller
   database encryption key</strong> field in the <%= vars.app_runtime_abbr %> tile.
   This field is only for use when restoring <%= vars.app_runtime_abbr %> from a backup.
   If you modify this value at a time other than restore, commands such as <code>cf push</code> might fail.
   Instead, change keys using the <strong>Encryption key ledger</strong> as described below.</p>

To rotate the CCDB encryption key: 

1. Navigate to the <%= vars.app_runtime_abbr %> tile in <%= vars.ops_manager %> and
   select the **Cloud Controller** pane.

1. Review the **Encryption key ledger** field. If you previously added a key and
   enabled the **Primary** checkbox, disable the checkbox.
   The <%= vars.app_runtime_abbr %> deploy fails if there is more than one key
   with the **Primary** checkbox enabled.

1. In the **Encryption key ledger** field:
	<p class="note"><strong>Note:</strong> Do not remove any existing keys until
           after you complete the last step of this procedure.
           Removing keys now causes the <%= vars.app_runtime_abbr %> deploy to fail.
        </p>
	1. Click **Add**. 
	1. Enter values for **Encryption key label** and **Encryption key**. 
	1. Enable the checkbox to mark this as your **Primary** key. 

1. Click **Save**. 

1. Select the **Errands** pane. 

1. Set the **Rotate CC Database Key** errand to **On**. 

1. Click **Save**. 

1. Redeploy <%= vars.app_runtime_abbr %>.
   After <%= vars.app_runtime_abbr %> deploys and the errand runs successfully,
   you can remove any previously specified CCDB encryption keys in the ledger.


## <a id="troubleshoot"></a> Troubleshoot Failed Rotation

This section describes how to troubleshoot errors that you may encounter while rotating the CCDB encryption key. 

### <a id="values-changed"></a> Error: Encryption key(s) have had their values changed

<table>
<tr>
	<th>Error</th>
	<td>The <%= vars.app_runtime_abbr %> deploy fails with a Cloud Controller error.
            The Cloud Controller logs include the following message:
            <code>Encryption key(s) mykey have had their values changed.
            Label and value pairs should not change, rather a new label and
            value pair should be added.</code></td>
 </tr>
 <tr>
	<th>Cause</th>
	<td><%= vars.app_runtime_abbr %> does not support editing key names or values in the ledger.
            A previously existing key was edited in the <%= vars.app_runtime_abbr %> UI.
            For example, a key with the name <code>key-name</code> previously had the value <code>key-value-1</code>
            and now it is <code>key-value-2</code>.</td>
</tr>
<tr>
	<th>Solution</th>
	<td>Replace the value for the key with its original value and follow the rotation procedure to add a new key. <br>You may need to find the original value of the key using the steps in <a href="#view">View Encryption Keys</a>.</td>
</tr>
</table>

### <a id="not-present"></a> Error: Encryption key(s) are still in use but not present in 'cc.database_encryption.keys'

<table>
<tr>
	<th>Error</th>
	<td>The <%= vars.app_runtime_abbr %> deploy fails with a Cloud Controller error.
            The Cloud Controller logs include the following message:
            <code>Encryption key(s) mykey are still in use but not present in 'cc.database_encryption.keys'</code></td>
 </tr>
 <tr>
	<th>Cause</th>
	<td>A previous key was removed from the ledger in the <%= vars.app_runtime_abbr %> UI
            before the key rotation errand ran.</td>
</tr>
<tr>
	<th>Solution</th>
	<td>Add the previously used key back to the ledger and redeploy <%= vars.app_runtime_abbr %>.
            <br>You may need to find the value of the previously used key using the steps
            in <a href="#view">View Encryption Keys</a>.
	</td>
</tr>
</table>

###  <a id="view"></a> View Encryption Keys

The section describes how to retrieve the value of an existing or previous encryption key. You may need to do this when troubleshooting a failed key rotation. 

#### <a id="actual-installation"></a> <%= vars.ops_manager %> actual-installation.yml

The <%= vars.ops_manager %> `actual-installation.yml` file shows properties
from the most recent successful deploy.
To view the encryption keys listed in this file:

1. Follow the steps in [Modify the Installation Files](https://docs.pivotal.io/platform/<%= vars.current_major_version.sub('.', '-') %>/customizing/modify-ops-man.html#installation)
    in _Modifying Your <%= vars.ops_manager %> Installation and Product Template Files_
    to decrypt the `actual-installation.yml` file.

1. Open the `actual-installation.yml` file and view the `cloud_controller_encryption_keys` property. 

#### <a id="credhub"></a> CredHub 

To view current and previous encryption keys using CredHub:

1. Follow the steps in [How to access CredHub with the CredHub CLI](https://community.pivotal.io/s/article/How-to-Access-CredHub-with-the-CredHub-CLI)
   in the Knowledge Base to log in to the CredHub CLI.

1. Run the following command to view the five most recent encryption keys: 
<pre>credhub get -n /opsmgr/TAS-GUID/cloud_controller/INDEX/encryption_keys --versions=5</pre>
	Where: 
	* `TAS-GUID` is the GUID of your <%= vars.app_runtime_abbr %> BOSH deployment.
	* `INDEX` is the zero-based index of the key. This corresponds to the order
           of the **Encryption key ledger** in the <%= vars.ops_manager %> UI.
